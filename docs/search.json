[{"path":"index.html","id":"preliminary-remarks","chapter":"Preliminary remarks","heading":"Preliminary remarks","text":"notes licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License last compiled 2021-06-22.Download install R (current version 4.1.0, nicknamed “Camp Pontanezen”) integrated development environment RStudio.can install R tutorial usingIt install texmex packages alongside learnr tutorial.","code":"\n# install.packages(\"remotes\")\nremotes::install_github(\"lbelzile/texmexTutorial\")"},{"path":"marginal-distribution-and-generalized-pareto-tails.html","id":"marginal-distribution-and-generalized-pareto-tails","chapter":"1 Marginal distribution and generalized Pareto tails","heading":"1 Marginal distribution and generalized Pareto tails","text":"Fit marginal models generalized Pareto tails empirical distribution body data.Pick suitable thresholds generalized Pareto distribution using diagnostic plotsThe conditional extremes model attempts describe general behaviour \\(D\\) random vector \\(\\boldsymbol{Y}\\) component \\(Y_j\\) exceeds high threshold \\(u_j\\). parallels multivariate peaks--threshold models, including multivariate generalized Pareto distributions arise limiting distribution given \\(\\max_{j=1}^D Y_j > u_j\\) hypothesis regular variation \\(R\\)-Pareto processes \\(R(\\boldsymbol{Y})>u\\) one-homogeneous functional \\(R\\).Univariate extreme value theory suggests \\(Y_j \\mid Y_j > u_j\\) can approximated generalized Pareto distribution scale \\(\\tau\\) shape \\(\\xi\\) \\(u_j\\) can proceed likewise components \\(\\boldsymbol{Y}\\). However, worth keeping mind components \\(\\boldsymbol{Y}\\) need simultaneously large \\(Y_j>u_j\\). Rather specify parametric model \\(Y_k\\) \\((k \\neq j)\\), can use empirical distribution,\n\\[\\begin{align*}\nF^{(k)}_n(y) = n^{-1}\\sum_{=1}^n \\mathrm{}(y \\leq y_{ik})\n\\end{align*}\\]\nsemiparametric alternative\n\\[\\begin{align*}\n\\widehat{F}_k(y) = \n\\begin{cases}\nF{(k)}_n(y) & y \\leq u_k; \\\\\n1-\\{1-F^{(k)}_n(u_k)\\}\\left(1+\\xi_k\\frac{y-u_k}{\\tau_k}\\right)^{-1/\\xi_k}_{+} & y > u_k.\n\\end{cases}\n\\end{align*}\\]\nmodel marginal distribution. leaves matter dependence structure.","code":""},{"path":"marginal-distribution-and-generalized-pareto-tails.html","id":"threshold-selection","chapter":"1 Marginal distribution and generalized Pareto tails","heading":"1.1 Threshold selection","text":"determine threshold select marginal exceedances, can produce threshold stability plots: consist shape estimates (pointwise 95% confidence intervals, even presented bands) range thresholds \\(u_1 < \\cdots < u_m\\). Assuming generalized Pareto approximation adequate \\(u_l\\), estimates stabilize thresholds \\(u_{l+1}, \\ldots, u_m\\) (Davison Smith 1990).\nFigure 1.1: Threshold stability plots adjusted scale (left) shape parameter (right) Fort Collins daily cumulated precipitation.\nshape estimates decrease steadily increase threshold, seems 25mm reasonable marginal threshold rainfall.function mrl produces mean residual life plots ggplot(texmex::mrl(data = precip)), literature graphics suggests human eye much easier time detecting lack trend linearity.Repeat exercise, time daily minimum maximum temperature.chosen threshold, fit generalized Pareto using function evm threshold th. can explore different methods (maximum likelihood, penalized maximum likelihood, Bayesian estimation Markov chain Monte Carlo using independent elliptical proposals)Produce quantile-quantile plot check goodness fit (via plot ggplot object returned evm).","code":"\nthstab <- \n  with(FortCollins,\n     texmex::gpdRangeFit(\n       data = precip,\n       umin = 20,\n       umax = 50,\n       nint = 10L,\n       penalty = \"none\") \n     # alternative is 'gaussian', yielding MAP\n)\n# there are two methods for graphics: \n# plots (base R) or ggplot (ggplot2)\npatchwork::wrap_plots(ggplot(thstab))"},{"path":"marginal-distribution-and-generalized-pareto-tails.html","id":"standardization-of-the-margins","chapter":"1 Marginal distribution and generalized Pareto tails","heading":"1.2 Standardization of the margins","text":"Heffernan-Tawn model describes extremes standardized data, direct correspondence extremes \\(\\{\\boldsymbol{Y}: Y_j > u_j\\}\\) \\(\\{\\boldsymbol{Y}: t_j(Y_j) > t_j(u_j)\\}\\) monotone transformation \\(t_j\\). standardization Heffernan Tawn (2004) Gumbel scale, subsequent work (Keef, Papastathopoulos, Tawn 2013) suggests better choice standard Laplace, .e., distribution double exponential tails can capture negative positive dependence.standard Laplace distribution density \\(f(x) = \\exp(-|x|)/2\\) \\(\\mathbb{R}\\) distribution function\n\\[\\begin{align*}\nF(x) = \\begin{cases}\n\\frac{1}{2}\\exp(x) & x < 0, \\\\\n1-\\frac{1}{2}\\exp(-x) & x \\geq 0.\n\\end{cases}\n\\end{align*}\\]\nThus, \\(Y_1, \\ldots, Y_D\\) random vector marginal distribution functions \\(F_1, \\ldots, F_D\\), can make margins standard Laplace applying quantile transformation\n\\[\\begin{align*}\nt_k(Y_k) = \n\\begin{cases}\n\\log\\{2{F}_k(Y_k)\\} & {F}_k(Y_k) < 1/2, \\\\\n-\\log[2\\{1-{F}_k(Y_k)\\}] & {F}_k(Y_k) \\geq 1/2,\n\\end{cases}\n\\qquad k=1, \\ldots, D.\n\\end{align*}\\]\npractice, replace unknown \\(k\\)th marginal distribution function \\(F_k\\) semiparametric estimator \\(\\widehat{F}_k\\).","code":""},{"path":"multivariate-model.html","id":"multivariate-model","chapter":"2 Multivariate model","heading":"2 Multivariate model","text":"multivariate conditional extremes model semiparametric regression model given one component large.model description assumes data standardised unit Laplace scale.Parameter estimates obtained working assumption normality independence components.Diagnostic plots models:\nthreshold stability dependence parameters\ntail correlation \\(\\chi(u)\\): agreement empirical estimates fitted \\(\\chi(u)\\) curve\nregression plots conditional independence residuals.\nthreshold stability dependence parameterstail correlation \\(\\chi(u)\\): agreement empirical estimates fitted \\(\\chi(u)\\) curveregression plots conditional independence residuals.conditional multivariate extreme model Heffernan Tawn (2004) form\n\\[\\begin{align*}\nt(\\boldsymbol{Y}_{-j})\\mid t_j(Y_j)=t_j(y_j)  \\approx \\boldsymbol{\\alpha}_{|j}t_j(y_j)+t_j(y_j)^{\\boldsymbol{\\beta}_{|j}}\\boldsymbol{Z}\n\\end{align*}\\]\n\\(\\boldsymbol{\\alpha}_{|j} \\[-1,1]^{D-1}\\) \\(\\boldsymbol{\\beta}_{|j} \\[-\\infty, 1]^{D-1}\\) \\(\\boldsymbol{Z}\\) unspecified residuals.fit model working assumption \\(\\boldsymbol{Z} \\sim \\mathsf{}_{D-1}(\\boldsymbol{\\mu}_{|j}, \\mathrm{diag}\\{\\boldsymbol{\\sigma}_{|j}^2\\})\\) nuisance parameters \\(\\boldsymbol{\\mu}_{|j}\\) \\(\\boldsymbol{\\sigma}^2_{|j}\\). Since margin conditionally independent others, can break optimization smaller chunks, estimating pair \\(a_{k|j}, b_{k|j}\\), etc. Thus, fit \\(D-1\\) margins separately likelihood derived \n\\[\\begin{align*}\nt_k(Y_k) \\mid t(Y_j)=t_j(y_j) \\sim \\mathsf{}\\left(\\alpha_{k|j}t_j(y_j) + t_j(y_j)^{\\beta_{k|j}}\\mu_{|j}, t_j(y_j)^{2\\beta_{k|j}}\\sigma^2_{k|j}\\right), \\qquad k \\neq j,\n\\end{align*}\\]\nprofile likelihood pair (\\(a_{k|j}\\), \\(b_{k|j}\\)) easily obtained upon noting , data \\[\nz_{ik} =\\frac{t_k(y_{ik}) - \\alpha_{k|j}t_j(y_{ij})}{t_j(y_{ij})^{\\beta_{k|j}}},\n\\]\nconditional maximum likelihood estimators \\(\\mu_{k|j}\\) \\(\\sigma^2_{k|j}\\) \\(\\widehat{\\mu}_{k|j} \\mid (\\alpha_{|j}, \\beta_{|j}) = \\overline{z}_{k}\\) \\(\\widehat{\\sigma}^2_{k|j}\\mid (\\alpha_{|j}, \\beta_{|j}) = n^{-1}\\sum_{=1}^n (z_{ik} - \\overline{z}_{k})^2\\).","code":""},{"path":"multivariate-model.html","id":"strength-of-extremal-dependence","chapter":"2 Multivariate model","heading":"2.1 Strength of extremal dependence","text":"fitting Heffernan-Tawn model, can look strength extremal dependence pairs.can first calculate coefficient tail dependence \\(\\chi\\) \\(\\overline{\\chi}\\) investigate strength extremal dependence.tail correlation coefficient \\(\\chi(u)\\) \n\\[\\chi(v)= \\frac{\\Pr\\{F_1(Y_1) > v, F_2(Y_2)>v\\}}{1-v}.\n\\]\n\\(\\chi = \\lim_{v \\1} \\chi(v) >0\\), say \\((Y_1, Y_2)\\) asymptotically dependent. Since \\(\\chi=0\\) asymptotically independent process, useful measure.tail dependence coefficient (Coles, Heffernan, Tawn 1999) \\(\\bar{\\chi}\\) estimated using\n\\[\\begin{align*}\n\\bar{\\chi}(v) = \\frac{2\\log(1-v)}{\\log[\\Pr\\{F_1(Y_1) > v, F_2(Y_2) > v\\}}-1\n\\end{align*}\\]\n\\(v \\(0,1)\\), \\(\\overline{\\chi} \\[-1,1]\\) asymptotically dependent processes \\(\\lim_{v \\1} \\overline{\\chi}(v)=1\\). statistic \\(\\chi\\) useful data asymptotically dependent, normally look first \\(\\overline{\\chi}\\) Wald confidence intervals include 1, look strength dependence using plot \\(\\chi\\). texmex package gray latter asymptotic dependence ruled .\nFigure 2.1: Tail dependence plots maximum daily temperature (top panel) minimum daily temperature (bottom panel), conditional extreme rainfall. right-hand panel greyed asymptotic dependence ruled .\nconditional extremes model holds, \\(t_k(Y_{k}) \\mid t_j(Y_{j}) > t_j(u_j)\\) can approximated \\(\\widetilde{Y}^*_{k|j} \\approx \\alpha_{k|j}t_j(Y_j)+t_j(Y_j)^{\\beta_{k|j}}Z_{k|j}\\). thus obtain formula \\(\\chi(v)\\) dependence threshold \\(u^{\\star}=t_j(u)\\), \\(v^{\\star}=-\\log\\{2\\cdot(1-v)\\}\\) \\((v > 0.5)\\) \\(v^{\\star} > u^{\\star}\\), \n\\[\\begin{align}\n\\chi(v) = \\tfrac{\\Pr\\{t_j(Y_j) > u^{\\star}\\}\\Pr\\{\\widetilde{Y}^{\\star}_{k|j} > v^{\\star}, t_j(Y_j) > v^{\\star}, t_j(Y_j) > v^{\\star} \\mid t_j(Y_j) > u^{\\star}\\}}{\\Pr\\{t_j(Y_j) > v^{\\star}\\}} \\label{HTchi}\n\\end{align}\\]\ncan estimate empirically coefficient tail dependence resampling values \\(Z_{k|j}\\). values simulation-based, can use average many replications. factor account parameter uncertainty, require using bootstrap.texmex package also includes multivariate conditional estimator Spearman’s \\(\\rho\\) (linear correlation scale \\(F_1(Y_1), \\ldots, F_D(Y_D)\\)).\nfunction MCS computes estimator, whereas bootMCS can used get measure uncertainty running nonparametric bootstrap computing 95% pointwise confidence intervals.Repeat exercise minTemp/maxTemp pair.sets plots suggest asymptotic regime (asymptotic independence dependence) strength dependence?","code":"\n# Create plot with matrix or data frame\n#  with 2 columns only\nchiplot_13 <- \n  chi(FortCollins[,c(\"maxTemp\",\"precip\")])\nchiplot_23 <- \n  chi(FortCollins[,c(\"minTemp\",\"precip\")])\n\n# Truncated the plots to focus on the upper right tail\n# because most of the rainfall records are zero\nggplot(chiplot_13, xlim = c(0.9,1))\nggplot(chiplot_23, xlim = c(0.9,1))"},{"path":"multivariate-model.html","id":"fitting-the-multivariate-model","chapter":"2 Multivariate model","heading":"2.2 Fitting the multivariate model","text":"main function fitting conditional extreme value model texmex mex gives two stage procedure\ncalls internally.First, migpd fits generalized Pareto distribution margin. Users must provide\nmth mqu: either thresholds \\(u_1, \\ldots, u_D\\) (argument mth) else vector probability levels \\(F_1(u_1), \\ldots, F_D(u_D)\\)\n(argument mqu)\nUser can compute maximum posteriori (instead maximum likelihood estimates) parameters, \\(\\log(\\tau) \\sim \\mathsf{}(0,100)\\) independent \\(\\xi \\sim \\mathsf{}(0,0.25)\\) default prior specifications penality='gaussian' (default).\nmth mqu: either thresholds \\(u_1, \\ldots, u_D\\) (argument mth) else vector probability levels \\(F_1(u_1), \\ldots, F_D(u_D)\\)\n(argument mqu)User can compute maximum posteriori (instead maximum likelihood estimates) parameters, \\(\\log(\\tau) \\sim \\mathsf{}(0,100)\\) independent \\(\\xi \\sim \\mathsf{}(0,0.25)\\) default prior specifications penality='gaussian' (default).standardized data fed mexDependence. latter multiple arguments:\n: column index conditioning variable\ndqu: probability level marginal quantile specify \\(t(\\boldsymbol{Y}) \\mid t_j(Y_j) > t_j(u_j)\\); note threshold need marginal threshold generalized Pareto.\nmargins choice distribution standardisation (default ‘laplace’)\nmarTransform: model \\(F_k\\) transforms every component \\(\\boldsymbol{Y}\\) standard Laplace margins. default, marTransform=\"mixture\" use semiparametric transformation (data modelled empirical distribution threshold generalized Pareto \\(u\\)). alternative use empirical distribution (marTransform = \"empirical\").\nconstrain whether impose constraints improve self-consistency estimates \\(\\boldsymbol{}_{|j}\\) \\(\\boldsymbol{b}_{|j}\\); defaut TRUE;\nPlotLikDo logical; whether produce bivariate profile likelihood defined curved subset \\([-1,1] \\times[-\\infty, 1]\\) constrain=TRUE.\n: column index conditioning variabledqu: probability level marginal quantile specify \\(t(\\boldsymbol{Y}) \\mid t_j(Y_j) > t_j(u_j)\\); note threshold need marginal threshold generalized Pareto.margins choice distribution standardisation (default ‘laplace’)marTransform: model \\(F_k\\) transforms every component \\(\\boldsymbol{Y}\\) standard Laplace margins. default, marTransform=\"mixture\" use semiparametric transformation (data modelled empirical distribution threshold generalized Pareto \\(u\\)). alternative use empirical distribution (marTransform = \"empirical\").constrain whether impose constraints improve self-consistency estimates \\(\\boldsymbol{}_{|j}\\) \\(\\boldsymbol{b}_{|j}\\); defaut TRUE;PlotLikDo logical; whether produce bivariate profile likelihood defined curved subset \\([-1,1] \\times[-\\infty, 1]\\) constrain=TRUE.general, unless want obtain profile likelihood plot, directly use mex combines two steps.determined marginal functional thresholds choice conditioning variable, can perform steps using mex.can show components \\(Y_j\\) \\(Y_k\\) :asymptotically dependent \\(\\alpha_{k|j}=1\\), \\(\\beta_{k|j}=0\\)asymptotically independent \\(-1<\\alpha_{k|j}<1\\)\npositive extremal dependence \\(\\alpha_{k|j}>0\\)\nnegative extremal dependence \\(\\alpha_{k|j}<0\\)\nnear independence \\(\\alpha_{k|j}=\\beta_{k|j}=0\\).\nNegative values \\(\\beta\\) (\\(b\\) plots) imply conditional quantiles \\(Y_k\\) converge value \\(Y_j\\). often implausible.\npositive extremal dependence \\(\\alpha_{k|j}>0\\)negative extremal dependence \\(\\alpha_{k|j}<0\\)near independence \\(\\alpha_{k|j}=\\beta_{k|j}=0\\).\nNegative values \\(\\beta\\) (\\(b\\) plots) imply conditional quantiles \\(Y_k\\) converge value \\(Y_j\\). often implausible.estimates \\(\\alpha_{k|j}\\) \\(\\beta_{j|j}\\) line expectations? Justify answer.","code":"\nmarg <- \n  FortCollins %>% \n  select(!date) %>% \n  migpd(\n    mqu = rep(0.9, 3), \n    penalty = 'none'\n    )\ncondModFit <- \n  mexDependence(\n    x = marg,\n    which = \"precip\", \n    dqu = 0.9, \n    PlotLikDo = FALSE,\n    PlotLikRange = list(a = c(-1, 1),\n                        b = c(-3, 1))\n    )\nprint(condModFit)\n#> mexDependence(x = marg, which = \"precip\", dqu = 0.9, PlotLikDo = FALSE, \n#>     PlotLikRange = list(a = c(-1, 1), b = c(-3, 1)))\n#> \n#> \n#> Marginal models:\n#> \n#> Dependence model:\n#> \n#> Conditioning on precip variable.\n#> Thresholding quantiles for transformed data: dqu = 0.9\n#> Using laplace margins for dependence estimation.\n#> Constrained estimation of dependence parameters using v = 10 .\n#> Log-likelihood = -5996 -6160 \n#> \n#> Dependence structure parameter estimates:\n#>   maxTemp minTemp\n#> a  0.0201   0.160\n#> b -0.6488  -0.401"},{"path":"multivariate-model.html","id":"functionalities-of-mex-and-diagnostic-plots","chapter":"2 Multivariate model","heading":"2.3 Functionalities of mex and diagnostic plots","text":"output mex mexDependence object class mex, many S3 methods available (including print summary). default plot (ggplot) method produce diagnostic plots ofstandardized residuals \\(\\widehat{Z}_k(Y_j)\\) \\(\\widehat{F}_j(Y_j)\\) lowess curveabsolute value standardized residuals \\(\\widehat{F}_j(Y_j)\\)plot \\(Y_k\\) \\(Y_j\\) fitted quantilesIf trend, contradicts somewhat assumption residuals \\(Z\\) independent value \\(Y_j\\), perhaps suggest threshold used dependence low.\nFigure 2.2: Regression diagnostic plots fitted conditional extremes model.\n","code":"\nggplot(condModFit)"},{"path":"multivariate-model.html","id":"uncertainty-quantification","chapter":"2 Multivariate model","heading":"2.4 Uncertainty quantification","text":"Uncertainty quantification obtained using semiparametric bootstrap scheme.Computationally expensive, replicate every step analysis bootstrap data.drawback “bricolage” approach model fitting readily available uncertainty quantification. Heffernan Tawn address devising semiparametric bootstrap scheme.\nconsists following steps:obtain nonparametric bootstrap sample (replacement) \\(\\{\\boldsymbol{Y}_i, \\ldots, \\boldsymbol{Y}_n\\}\\)obtain \\(D\\) samples size \\(n\\) standard Laplace margins \\(\\boldsymbol{Z}^{(b)}\\).reorder Laplace observations margin rank match nonparametric bootstrap.transform observations data scale using \\(\\widehat{F}_j^{-1}(\\cdot)\\) \\((j=1, \\ldots, D)\\)Thus, new dataset estimate dependence. Rince repeat every step includingempirical distribution estimationgeneralized Pareto thresholdmultivariate model coefficientsThe bootmex package takes output mex mexDependence produces R replicates.far, assessed choice threshold procedure. can produce threshold stability plot fitting model range values dqu look resulting estimates. , coupled bootstrap replicates, useful make sure optimization algorithm converge threshold high enough approximation hold.\nFigure 2.3: Dependence threshold stability plots 10 bootstrap replicates conditional extreme value model fitted 0.9 quantile cumulated daily precipitation.\ncan use resulting object produce scatterplots pairs parameter estimates margin get bootstrap confidence intervals standard errors parameters.\nFigure 2.4: Scatterplot bootstrap parameter estimates coefficients conditional extreme value model maximum daily temperature (left) minimum daily temperature (right) conditional cumulated daily precipitation. maximum likelihood estimate original data indicated -sign (red).\n","code":"\nbootCondModFit <- bootmex(condModFit)\nthreshold_stab_multi <-\n  mexRangeFit(\n    x = marg, \n    quantiles = seq(0.90, 0.98, by = 0.02),\n    which = \"precip\", #margin to condition on\n    R = 10L, # number of bootstrap samples\n    trace = Inf\n  )\nggplot(threshold_stab_multi)\n# ggplot method seems broken...\npar(mfrow = c(1,2), bty = \"l\")\nplot(bootCondModFit, plot = \"dependence\")"},{"path":"estimating-the-probability-of-rare-events.html","id":"estimating-the-probability-of-rare-events","chapter":"3 Estimating the probability of rare events","heading":"3 Estimating the probability of rare events","text":"Estimation risk measures via Monte Carlo methods: simulate new replicates fitted model compute number pointsFor general risk regions one component can extreme, proceed fitting multiple conditional modelsEntirely empirical approachThe whole point estimating multivariate model estimate probability rare events. general, can estimate probability falling risk region \\(\\mathcal{} \\subset\\{Y_j > u_j\\}\\) via Monte Carlo simulations. texmex, achieved predict method, uses model simulation.hood, function forms \\(n\\) vectors residuals\n\\[\n\\widehat{\\boldsymbol{z}}_{|j} = y_{ij}^{-\\widehat{\\boldsymbol{\\beta}}_{|j}}\\left(\\boldsymbol{y}_{,-j} - \\widehat{\\boldsymbol{\\alpha}}_{|j}y_{ij}\\right), \\quad (=1, \\ldots, n).\n\\], choosing threshold \\(v > u_j\\), canSimulate \\(Y_j \\sim \\mathsf{Exp}(1) + v\\).Sample \\(\\boldsymbol{z}_{|j}\\) uniformly empirical distribution \\(\\{\\widehat{\\boldsymbol{z}}_{|j}\\}_{=1}^n\\).Set \\(\\boldsymbol{Y}_{-j}= \\widehat{\\boldsymbol{\\alpha}}Y_j + Y_j^{\\widehat{\\boldsymbol{\\beta}}}\\boldsymbol{z}_{|j}\\).Back-transform observations original scale.predict method objects class mex bootmex performs nsim=1000 replications default pqu=0.99. may choose dependence threshold predict variables. Note bootstrap estimates contain addition quantiles estimated standard error conditional mean. Fort Collins data, appear give much narrower quantile ranges.predict method includes option smoothZdistribution perform kernel smoothing marginal remove artefacts. levels conditional quantiles can changed via argument probs.can produce plots predict.mex objects using ggplot. resulting scatterplots slightly confusing:orange full line gives line \\(t_j(Y_j) = t_k(Y_k)\\); since data plotted scale \\((Y_j, Y_k)\\) data, line curved.vertical dashed line represent dependence thresholdgrey points original observationsblue diamonds new simulated observations model simulated conditioning variable \\(Y_j > Y_k\\); orange circles simulated points \\(Y_k > Y_j\\).\nFigure 3.1: Simulations fitted conditional model 0.9 quantile (blue orange) original data (grey). orange line indicates equal quantiles pair.\nThus, can see simulation scheme produces coherent data case. simulations stored pred_mex$data, list contains original data (real), simulated observations data scale (simulated) Laplace (transformed) scale.can access data compute empirical estimates probabilities various sets interest.Estimate probability maximum daily temperature 30 degrees Celcius amount rainfall larger 25 mm.","code":"\npred_boot <- predict(\n    bootCondModFit, \n    pqu = 0.9,  \n    trace = Inf)\n# for the `bootmex` object, produces replications \n# for each bootstrap sample\npred_mex <- predict(condModFit, pqu = 0.9)\n# `print` will output conditional mean\n# `summary` gives conditional mean and quantiles\nsummary(pred_mex)\n#> predict.mex(object = condModFit, pqu = 0.9)\n#> \n#> Conditioned on precip being above its 90th percentile.\n#> \n#> \n#> Conditional Mean and Quantiles:\n#> \n#>      precip|precip>Q90 maxTemp|precip>Q90 minTemp|precip>Q90\n#> mean              8.99              14.10               3.79\n#> 5%                2.42              -2.25             -11.70\n#> 50%               5.98              14.40               5.56\n#> 95%              27.10              29.50              15.80\n#> \n#> Conditional probability of threshold exceedance:\n#> \n#>  P(precip>2.16|precip>Q90) P(maxTemp>30|precip>Q90)\n#>                          1                    0.038\n#>  P(minTemp>12.7778|precip>Q90)\n#>                          0.158\nsummary(pred_boot)\n#> predict.mex(object = bootCondModFit, pqu = 0.9, trace = Inf)\n#> \n#> Results from 100 bootstrap runs.\n#> \n#> Conditioned on precip being above its 90th percentile.\n#> \n#> \n#> Conditional Mean and Quantiles:\n#> \n#>      precip|precip>Q90 maxTemp|precip>Q90 minTemp|precip>Q90\n#> mean             9.060             13.900              3.480\n#> se               0.397              0.412              0.361\n#> 5%               8.440             13.200              2.900\n#> 50%              9.040             13.900              3.490\n#> 95%              9.790             14.500              4.190\n#> \n#> Conditional probability of threshold exceedance:\n#> \n#>  P(precip>2.16|precip>Q90) P(maxTemp>30|precip>Q90)\n#>                          1                   0.0335\n#>  P(minTemp>12.7778|precip>Q90)\n#>                          0.148"},{"path":"estimating-the-probability-of-rare-events.html","id":"self-consistency","chapter":"3 Estimating the probability of rare events","heading":"3.1 Self-consistency","text":"far, model valid region \\(Y_j > u_j\\), often interested general events form \\(\\{Y_j>u_j, Y_k>u_k\\}\\). Depending conditioning variable, express two ways:\n\\[\\begin{align*}\n\\Pr(Y_k > u_k, Y_j > u_j) &= \\Pr(Y_k > u_k \\mid Y_j > u_j)\\Pr(Y_j > u_j)\n\\\\& = \\Pr(Y_j > u_j \\mid Y_k > u_k)\\Pr(Y_k > u_k)\n\\end{align*}\\]\nchoose different conditioning variable, obtain different answers. one major drawback approach: readily yield genuine multivariate model self-consistent (meaning answer question regardless conditioning variable \\(t_j(u_j) = t_k(u_k)\\)). case, one need enforce additional constraints \\(a_{j|k}=a_{k|j}\\), etc.","code":""},{"path":"estimating-the-probability-of-rare-events.html","id":"glue-together-conditional-models","chapter":"3 Estimating the probability of rare events","heading":"3.2 Glue together conditional models","text":"Heffernan Tawn (2004) suggest splitting risk region \\(\\mathcal{}\\) disjoint sets exceedances, choosing conditioning variable largest component Laplace scale. view model mixture adequate weights, defines valid multivariate distribution (cf. discussion . Papastathopoulos Engelke Hitz 2020), model fitting procedure factor account: fits model parameters \\(\\boldsymbol{\\alpha}_{|j}\\) \\(\\boldsymbol{\\beta}_{|j}\\) data \\(\\{\\boldsymbol{Y}_i: Y_j>u_j\\}\\), just \\(\\{\\boldsymbol{Y}_i: Y_j>u_j, t_j(Y_j) > t_k(Y_k), k \\neq j\\}\\).function mexAll fits models conditional models together. One can use mexMonteCarlo generate points models, case \\(\\)th bootstrap observation replaced sample \\(j\\)th conditional extremes model, \\(j\\) largest standardized component occurs, .e. \\(t_j(Y_{ij}) > t_k(Y_{ik})\\) \\(k \\neq j\\).","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
